version: '3.8'

services:
  app:
    build: .
    container_name: inventory-app
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/inventory_management
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD:-postgres}
      - SPRING_PROFILES_ACTIVE=prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - inventory-network

  db:
    image: postgres:14-alpine
    container_name: inventory-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=inventory_management
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./create_database_postgres.sql:/docker-entrypoint-initdb.d/create_database_postgres.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - inventory-network
    restart: unless-stopped

volumes:
  postgres_data:
    name: inventory-postgres-data

networks:
  inventory-network:
    name: inventory-network 